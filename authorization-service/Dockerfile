#build back
FROM mcr.microsoft.com/dotnet/sdk:6.0-alpine AS BackBuild

ARG BASE_NUGET_SOURCE_INDEX_URI
ARG BASE_NUGET_SOURCE_NAME
ARG BASE_NUGET_SOURCE_USER_NAME
ARG BASE_NUGET_SOURCE_AUTH_TOKEN

ARG AUTHORIZATION_SERVICE_NUGET_SOURCE_INDEX_URI
ARG AUTHORIZATION_SERVICE_NUGET_SOURCE_NAME
ARG AUTHORIZATION_SERVICE_NUGET_SOURCE_USER_NAME
ARG AUTHORIZATION_SERVICE_NUGET_SOURCE_AUTH_TOKEN

WORKDIR /src

COPY ["./src/BookStore.AuthorizationService.sln", "./"]

COPY ["./src/BookStore.AuthorizationService.AppEntryPoint/*.csproj", "./BookStore.AuthorizationService.AppEntryPoint/"]
COPY ["./src/BookStore.AuthorizationService.BL/*.csproj", "./BookStore.AuthorizationService.BL/"]
COPY ["./src/BookStore.AuthorizationService.Configs/*.csproj", "./BookStore.AuthorizationService.Configs/"]
COPY ["./src/BookStore.AuthorizationService.Contracts/*.csproj", "./BookStore.AuthorizationService.Contracts/"]
COPY ["./src/BookStore.AuthorizationService.Data/*.csproj", "./BookStore.AuthorizationService.Data/"]
COPY ["./src/BookStore.AuthorizationService.Defaults/*.csproj", "./BookStore.AuthorizationService.Defaults/"]
COPY ["./src/BookStore.AuthorizationService.Settings/*.csproj", "./BookStore.AuthorizationService.Settings/"]
COPY ["./src/BookStore.AuthorizationService.WebEntryPoint/*.csproj", "./BookStore.AuthorizationService.WebEntryPoint/"]

RUN dotnet nuget add source $BASE_NUGET_SOURCE_INDEX_URI --name $BASE_NUGET_SOURCE_NAME --username $BASE_NUGET_SOURCE_USER_NAME --password $BASE_NUGET_SOURCE_AUTH_TOKEN --store-password-in-clear-text
RUN dotnet nuget add source $AUTHORIZATION_SERVICE_NUGET_SOURCE_INDEX_URI --name $AUTHORIZATION_SERVICE_NUGET_SOURCE_NAME --username $AUTHORIZATION_SERVICE_NUGET_SOURCE_USER_NAME --password $AUTHORIZATION_SERVICE_NUGET_SOURCE_AUTH_TOKEN --store-password-in-clear-text

RUN dotnet restore /src/BookStore.AuthorizationService.sln

COPY ["./src/.", "./"]
WORKDIR /src/BookStore.AuthorizationService.AppEntryPoint
RUN dotnet publish -c release -o /published --no-restore

# build front
FROM node:current-alpine as FrontBuild

ARG REACT_APP_CONSENT_PAGE_URI
ARG REACT_APP_SIGN_UP_PAGE_URI
ARG REACT_APP_SIGN_IN_PAGE_URI
ARG REACT_APP_OP_AUTHORIZE_ENDPOINT_URI
ARG REACT_APP_OP_ACCOUNT_ENDPOINT_URI

ENV REACT_APP_CONSENT_PAGE_URI=$REACT_APP_CONSENT_PAGE_URI
ENV REACT_APP_SIGN_UP_PAGE_URI=$REACT_APP_SIGN_UP_PAGE_URI
ENV REACT_APP_SIGN_IN_PAGE_URI=$REACT_APP_SIGN_IN_PAGE_URI
ENV REACT_APP_OP_AUTHORIZE_ENDPOINT_URI=$REACT_APP_OP_AUTHORIZE_ENDPOINT_URI
ENV REACT_APP_OP_ACCOUNT_ENDPOINT_URI=$REACT_APP_OP_ACCOUNT_ENDPOINT_URI

WORKDIR /app

COPY ["./src/authorization-service-spa/package.json", "./"]
COPY ["./src/authorization-service-spa/package-lock.json", "./"]

RUN npm install

COPY ["./src/authorization-service-spa/.", "./"] 

RUN npm run build

#build service
FROM mcr.microsoft.com/dotnet/aspnet:6.0-alpine


ARG REACT_APP_CONSENT_PAGE_LOCAL_URI
ARG REACT_APP_SIGN_UP_PAGE_LOCAL_URI
ARG REACT_APP_SIGN_IN_PAGE_LOCAL_URI
ARG REACT_APP_OP_AUTHORIZE_ENDPOINT_URI
ARG REACT_APP_OP_ACCOUNT_ENDPOINT_URI

ENV REACT_APP_CONSENT_PAGE_LOCAL_URI=$REACT_APP_CONSENT_PAGE_LOCAL_URI
ENV REACT_APP_SIGN_UP_PAGE_LOCAL_URI=$REACT_APP_SIGN_UP_PAGE_LOCAL_URI
ENV REACT_APP_SIGN_IN_PAGE_LOCAL_URI=$REACT_APP_SIGN_IN_PAGE_LOCAL_URI
ENV REACT_APP_OP_AUTHORIZE_ENDPOINT_URI=$REACT_APP_OP_AUTHORIZE_ENDPOINT_URI
ENV REACT_APP_OP_ACCOUNT_ENDPOINT_URI=$REACT_APP_OP_ACCOUNT_ENDPOINT_URI

ARG ENVIRONMENT

ARG BOOK_STORE_SWAGGER_UI_CLIENT_ID
ARG BOOK_STORE_SWAGGER_UI_CLIENT_SECRET

ARG AUTHORIZATION_SERVICE_BASE_DATABASE_CONNECTION_STRING

ARG AUTHORIZATION_SERVICE_ISSUER
ARG AUTHORIZATION_SERVICE_TOKEN_URI
ARG AUTHORIZATION_SERVICE_SIGN_IN_URI

ARG SUPERUSER_PASSWORD
ARG ADMIN_PASSWORD
ARG TEST_DEFAULT_USER

ARG BOOK_STORE_EXTERNAL_URI
ARG AUTHORIZATION_SERVICE_EXTERNAL_URI
ARG BOOK_SERVICE_EXTERNAL_URI
ARG USER_SERVICE_EXTERNAL_URI
ARG ORDER_SERVICE_EXTERNAL_URI

ARG DEFAULT_PATH_TO_SWAGGER_UI_ACF_REDIRECT

ENV ASPNETCORE_ENVIRONMENT=$ENVIRONMENT
ENV ASPNETCORE_URLS="http://+:80"

ENV APP_CONFIG__ENVIRONMENT=$ENVIRONMENT

ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__CLIENT_ID=$BOOK_STORE_SWAGGER_UI_CLIENT_ID
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__CLIENT_SECRET=$BOOK_STORE_SWAGGER_UI_CLIENT_SECRET
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__DISPLAY_NAME=$BOOK_STORE_SWAGGER_UI_CLIENT_ID

ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__REDIRECT_URIS__0="$BOOK_STORE_EXTERNAL_URI$DEFAULT_PATH_TO_SWAGGER_UI_ACF_REDIRECT"
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__REDIRECT_URIS__1="$AUTHORIZATION_SERVICE_EXTERNAL_URI$DEFAULT_PATH_TO_SWAGGER_UI_ACF_REDIRECT"
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__REDIRECT_URIS__2="$BOOK_SERVICE_EXTERNAL_URI$DEFAULT_PATH_TO_SWAGGER_UI_ACF_REDIRECT"
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__REDIRECT_URIS__3="$USER_SERVICE_EXTERNAL_URI$DEFAULT_PATH_TO_SWAGGER_UI_ACF_REDIRECT"
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__REDIRECT_URIS__4="$ORDER_SERVICE_EXTERNAL_URI$DEFAULT_PATH_TO_SWAGGER_UI_ACF_REDIRECT"

ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__CORS_ORIGINS__0="$BOOK_STORE_EXTERNAL_URI"
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__CORS_ORIGINS__1="$AUTHORIZATION_SERVICE_EXTERNAL_URI"
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__CORS_ORIGINS__2="$BOOK_SERVICE_EXTERNAL_URI"
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__CORS_ORIGINS__3="$USER_SERVICE_EXTERNAL_URI"
ENV DEFAULT_CLIENTS_CONFIG__BOOK_STORE_SWAGGER_UI_CONFIG__CORS_ORIGINS__4="$ORDER_SERVICE_EXTERNAL_URI"

ENV AUTHORIZATION_SERVICE_CONFIG__ISSUER=$AUTHORIZATION_SERVICE_ISSUER
ENV AUTHORIZATION_SERVICE_CONFIG__TOKEN_URI=$AUTHORIZATION_SERVICE_TOKEN_URI
ENV AUTHORIZATION_SERVICE_CONFIG__SIGN_IN_URI=$AUTHORIZATION_SERVICE_SIGN_IN_URI

ENV SWAGGER_CONFIG__UI__CLIENT_ID=$BOOK_STORE_SWAGGER_UI_CLIENT_ID
ENV SWAGGER_CONFIG__UI__CLIENT_SECRET=$BOOK_STORE_SWAGGER_UI_CLIENT_SECRET

ENV LOG_CONFIG__LOG_FILE_PATH="./logs/book-store.authorization-service.txt"
ENV LOG_CONFIG__OUTPUT_TEMPLATE="{Timestamp:yyyy-MM-dd HH:mm:ss} [{Level}] [{SourceContext:l}] {Message}{NewLine}{Exception}"

ENV BASE_DATABASE_CONFIG__CONNECTION_STRING=$AUTHORIZATION_SERVICE_BASE_DATABASE_CONNECTION_STRING

ENV DEFAULT_USERS_CONFIG__SUPERUSER__PASSWORD=$SUPERUSER_PASSWORD
ENV DEFAULT_USERS_CONFIG__ADMIN__PASSWORD=$ADMIN_PASSWORD
ENV DEFAULT_USERS_CONFIG__TEST_DEFAULT_USER__PASSWORD=$TEST_DEFAULT_USER


# ENV ASPNETCORE_ENVIRONMENT="Development"
# ENV ASPNETCORE_URLS="http://+:80"

# ENV SWAGGERUI_CLIENT_ID="SwaggerUI"
# ENV SWAGGERUI_CLIENT_SECRET="KmsleOF322(@4msl!!ols"

# ENV MASSTRANSIT_HOST="book-store"
# ENV MASSTRANSIT_USER_NAME="BookStore"
# ENV MASSTRANSIT_PASSWORD="KJiwjd2*12asl!"

# ENV MINIO_ACCESS_KEY="Admin"
# ENV MINIO_SECRET_KEY="Akwi@!@4j2"
# ENV MINIO_DEFAULT_BUCKET_NAME="root-bucket"

# ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
# RUN apk add icu-libs

# ENV MUSL_LOCPATH=/usr/local/share/i18n/locales/musl
# RUN apk add --update git cmake make musl-dev gcc gettext-dev libintl
# RUN cd /tmp && git clone https://github.com/rilian-la-te/musl-locales.git
# RUN cd /tmp/musl-locales && cmake . && make && make install

# ENV LANG=ru_RU.UTF-8
# ENV LANGUAGE=ru_RU.UTF-8
# ENV LC_ALL=ru_RU.UTF-8
#___________________________
WORKDIR /BookStore.AuthorizationService
COPY --from=BackBuild ["/published/.", "./"]
COPY --from=FrontBuild ["/app/build/.", "./wwwroot/"]
ENTRYPOINT ["dotnet", "BookStore.AuthorizationService.AppEntryPoint.dll"]